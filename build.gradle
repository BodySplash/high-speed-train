allprojects {

    wrapper {
        gradleVersion = '5.6.2'
    }

    repositories {
        google()
        jcenter()
    }
}


ext {
    junitVersion = '5.4.2'
    vavrVersion = '0.10.0'
    guiceVersion = '4.2.2'
    restEasyVersion = '4.0.0.Final'
    agronaVersion = '1.0.2'
    undertowVersion = '2.0.22.Final'
    eclipseCollectionVersion = '10.0.0'
    resilience4jVersion = '0.16.0'
    cloudStorageVersion = '1.79.0'
    guavaVersion = '28.0-jre'
    jwtVersion = '3.8.1'
    sbeToolVersion = '1.13.2'
    aeronVersion = '1.21.2'
}

def allJavaApplications = [':reservation:gateway:gateway-core', ':reservation:cluster:cluster-core']

def allJavaLibrary = [':reservation:gateway:gateway-api', ':reservation:cluster:cluster-api']

def allJavaProjects = allJavaApplications + allJavaLibrary

allJavaLibrary.forEach {
    project(it) {
        apply plugin: 'java-library'
    }
}

allJavaApplications.forEach {
    project(it) {
        apply plugin: 'application'

        
    }
}

allJavaProjects.forEach {
    project(it) {
        compileJava {
            sourceCompatibility = 11
            targetCompatibility = 11
        }

         dependencies {
            implementation "com.google.inject.extensions:guice-multibindings:$guiceVersion"
            implementation "com.google.inject:guice:$guiceVersion:no_aop"
            implementation 'org.cfg4j:cfg4j-core:4.4.1'
            implementation 'ch.qos.logback:logback-classic:1.2.3'

            testImplementation 'org.mockito:mockito-core:2.28.2'
            testImplementation 'org.mockito:mockito-junit-jupiter:2.28.2'
            testImplementation 'org.assertj:assertj-core:3.12.2'
            testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
            testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        }

        test {
            useJUnitPlatform()
            failFast = true

            testLogging {
                events "PASSED", "FAILED", "SKIPPED"
            }
        }
    }
}